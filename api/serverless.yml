service:
  name: api
  version: ">=1.5"

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-typescript

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent

provider:
  name: aws
  runtime: nodejs12.x
  timeout: 5
  region: eu-west-1
  endpointType: regional
  environment:
    EXPERIENCE: EXPERIENCE_TABLE-${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "*"

functions:
  graphql:
    handler: src/handler.graphqlHandler
    events:
      - http:
          path: graphql
          method: post
          cors:
            origin: "*"
            headers: ${self:custom.allowedHeaders}
      - http:
          path: graphql
          method: get
          cors:
            origin: "*"
            headers: ${self:custom.allowedHeaders}

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.EXPERIENCE_TABLE}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Header: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
